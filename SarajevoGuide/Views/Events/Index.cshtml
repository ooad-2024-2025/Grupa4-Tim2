@model IEnumerable<SarajevoGuide.Models.Event>
@{
    ViewData["Title"] = "Events - Admin";
}

<div class="admin-container">
    <div class="sidebar">
        <div class="section-title">MANAGE ITEMS</div>

        <a class="category-btn" href="#" data-category="Sight">
            <img src="/images/camera.png" alt="Sights" />
            Sights
        </a>
        <a class="category-btn" href="#" data-category="Event">
            <img src="/images/event.png" alt="Events" />
            Events
        </a>
        <a class="category-btn" href="#" data-category="Rest">
            <img src="/images/coffee.png" alt="Rest" />
            Rest
        </a>

        <div class="section-title" style="margin-top: 30px;">MANAGE ACCOUNTS</div>

        <button class="category-btn">
            <img src="/images/user.png" alt="Users" />
            Users
        </button>
        <button class="category-btn-admin">
            <img width="96" height="96" src="https://img.icons8.com/material-rounded/96/admin-settings-male.png" alt="admin-settings-male" />
            Administrators
        </button>
    </div>

    <div class="admin-content">
        <div class="admin-header">
            <h2>Manage Events</h2>
            <a asp-action="Create" class="btn">+</a>
        </div>

        <div class="cards-grid">
            @foreach (var item in Model)
            {
                <div class="event-card" onclick="openEventDetails(@item.Id)">
                    <div class="card-image-placeholder">
                        <svg width="60" height="60" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                            <rect x="3" y="3" width="18" height="18" rx="2" ry="2" />
                            <circle cx="8.5" cy="8.5" r="1.5" />
                            <polyline points="21,15 16,10 5,21" />
                        </svg>
                    </div>
                    <div class="card-content">
                        <h3 class="card-title">@item.Name</h3>
                        <p class="card-subtitle">@item.Kategorija</p>

                        <div class="card-rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <span class="star">☆</span>
                            }
                            <span class="rating-text">(0)</span>
                        </div>

                        <div class="card-details">
                            <div class="detail-item">
                                <strong>Start:</strong> @item.StartDate?.ToString("MMM dd, yyyy")
                            </div>
                            <div class="detail-item">
                                <strong>End:</strong> @item.EndDate?.ToString("MMM dd, yyyy")
                            </div>
                            <div class="detail-item">
                                <strong>Price:</strong> @item.Price KM
                            </div>
                            <div class="detail-item">
                                <strong>Location:</strong> @item.Lat, @item.Lng
                            </div>
                        </div>

                        <div class="card-actions">
                            <button class="card-edit-btn" onclick="event.stopPropagation(); location.href='@Url.Action("Edit", new { id = item.Id })'">
                                Edit
                            </button>
                            <div class="action-links">
                                <a asp-action="Delete" asp-route-id="@item.Id" class="action-link delete-link" onclick="event.stopPropagation()">Delete</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    // Category filtering functionality
    document.querySelectorAll('.category-btn[data-category]').forEach(button => {
        let clickCount = 0;

        button.addEventListener('click', function (e) {
            e.preventDefault(); // Prevent immediate navigation
            clickCount++;

            setTimeout(() => {
                const category = this.dataset.category;

                if (clickCount === 1) {
                    // Single click = filter by category
                    if (category) {
                        window.location.href = `?category=${category}`;
                    }
                } else if (clickCount === 2) {
                    // Double click = reset filter
                    window.location.href = `/Events`;
                }

                clickCount = 0;
            }, 250);
        });
    });

    // Function to open event details modal
    function openEventDetails(eventId) {
        // Navigate to the Details action which will show the modal
        window.location.href = '@Url.Action("Details", "Events")' + '/' + eventId;
    }
</script>