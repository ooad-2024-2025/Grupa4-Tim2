@{
    ViewData["Title"] = "Home";
}

<div class="map-container">
    <div class="sidebar">
        <p class="section-title">CATEGORY</p>
        <div class="btn-group-vertical w-100 mb-3">
            <button class="category-btn active" data-category="Sight" onclick="filterMarkers('Sight')">
                <img src="/images/camera.png" alt="Sights" />
                <span>Sights</span>
            </button>
            <button class="category-btn" data-category="Event" onclick="filterMarkers('Event')">
                <img src="/images/event.png" alt="Events" />
                <span>Events</span>
            </button>
            <button class="category-btn" data-category="Rest" onclick="filterMarkers('Rest')">
                <img src="/images/coffee.png" alt="Rest" />
                <span>Rest</span>
            </button>
        </div>

        <p class="section-title">FILTERS</p>

        <div class="mb-4">
            <label class="filter-label">Date</label>
            <div class="radio-group">
                <label><input type="radio" name="date" /> Today</label>
                <label><input type="radio" name="date" /> Tomorrow</label>
                <label><input type="radio" name="date" /> This week</label>
                <label><input type="radio" name="date" /> Pick a date…</label>
            </div>
        </div>

        <div class="mb-4">
            <label class="filter-label">Cost</label>
            <div class="radio-group">
                <label><input type="radio" name="cost" /> $</label>
                <label><input type="radio" name="cost" /> $$</label>
                <label><input type="radio" name="cost" /> $$$</label>
            </div>
        </div>

        <div class="mb-4">
            <label class="filter-label">Distance</label>
            <input type="range" min="0" max="10" value="5" class="form-range custom-range">
            <div class="distance-labels"><span>0 m</span><span>10 km</span></div>
        </div>
    </div>
    <div id="map"></div>
</div>


@section Scripts {
    <script>
        let map;
        let markers = [];
        let currentCategory = null;

        async function initMap() {
            const { Map } = await google.maps.importLibrary("maps");

            map = new Map(document.getElementById('map'), {
                center: { lat: 43.8563, lng: 18.4131 },
                zoom: 13,
            });

            const response = await fetch('/Events/GetEvents');
            const events = await response.json();

            events.forEach(event => {
                const marker = new google.maps.Marker({
                    position: { lat: event.lat, lng: event.lng },
                    map: map,
                    title: event.name
                });

                // Save kategorija to marker object
                marker.kategorija = event.kategorija;

                markers.push(marker); // <-- VERY IMPORTANT
            });
        }

                           function filterMarkers(category) {
            const allButtons = document.querySelectorAll('.category-btn');

            // If the clicked category is already active — reset
            if (currentCategory === category) {
                currentCategory = null;

                // Remove active from all buttons
                allButtons.forEach(btn => btn.classList.remove('active'));

                // Show all markers
                markers.forEach(marker => marker.setMap(map));
            } else {
                currentCategory = category;

                // Remove active from all buttons
                allButtons.forEach(btn => btn.classList.remove('active'));

                // Activate the clicked button
                allButtons.forEach(btn => {
                    if (btn.dataset.category === category) {
                        btn.classList.add('active');
                    }
                });

                // Filter markers
                markers.forEach(marker => {
                    if (marker.kategorija === category) {
                        marker.setMap(map); // Show matching
                    } else {
                        marker.setMap(null); // Hide others
                    }
                });
            }
        }


        window.initMap = initMap;
    </script>

    <!--  Load Google Maps API -->
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAFJUeEaeMvw0dht4bnVPCb799EFW-8-Ao&callback=initMap">
    </script>
}
