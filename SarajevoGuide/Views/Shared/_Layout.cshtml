@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SarajevoGuide</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/SarajevoGuide.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        @if (ViewData["HideNavbar"] == null || !(bool)ViewData["HideNavbar"])
        {
            <nav class="navbar d-flex justify-content-between align-items-center px-4">
                <div class="d-flex align-items-center gap-3">
           
                    <a href="/" class="d-flex align-items-center">
                        <div class="logo-circle">
                            <img src="https://img.icons8.com/material-outlined/24/FFFFFF/map--v1.png" alt="map" />
                        </div>
                    </a>

                    @if (SignInManager.IsSignedIn(User))
                    {
                        var user = await UserManager.GetUserAsync(User);
                        <span class="fw-semibold">Hi, @user.UserName!</span>
                    }
                </div>

                <div class="d-flex gap-4 mx-auto">
                    <a href="/" class="nav-link">Home</a>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a href="/Bookmarks/Index">Bookmarks</a>
                    }
            
                    <a href="/Recenzijas/Reviews" class="nav-link">Reviews</a>
                      
                   
                    @if (SignInManager.IsSignedIn(User))
                    {
                        var user = await UserManager.GetUserAsync(User);
                        var roles = await UserManager.GetRolesAsync(user);
                        if (roles.Contains("Admin"))
                        {
                            <a href="/Events/Index" class="nav-link">My Events</a>
                        }
                    }
                </div>
                <div class="navbar-account d-flex align-items-center gap-3">
                    <a href="/RegistrovaniKorisniks" class="d-flex align-items-center text-decoration-none">
                        Account
                        <img src="/images/user.png" alt="account" class="ms-1" />
                    </a>

                    @if (SignInManager.IsSignedIn(User))
                    {
                        <form asp-controller="RegistrovaniKorisniks" asp-action="Logout" method="post" class="m-0 p-0">
                            <button type="submit" class="btn btn-sm btn-outline-danger" title="Logout" style="padding: 4px 8px;">
                                <img src="https://img.icons8.com/material-rounded/24/000000/shutdown.png" alt="Logout" />
                            </button>
                        </form>
                    }
                </div>
            </nav>
        }
    </header>
    <main role="main" class="pb-3">
        @RenderBody()
    </main>
   
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Get the current page URL
            const currentPath = window.location.pathname.toLowerCase();

            // Get all navbar links (correct selector)
            const navbarLinks = document.querySelectorAll('.navbar-links a');

            // Remove active class from all links first
            navbarLinks.forEach(link => {
                link.classList.remove('active');
            });

            // Add active class based on current path
            navbarLinks.forEach(link => {
                const href = link.getAttribute('href').toLowerCase();

                // Check if current path matches or starts with the link href
                if (currentPath === href ||
                    (href !== '/' && currentPath.startsWith(href)) ||
                    (href.includes('events') && currentPath.includes('events')) ||
                    (href === '/' && currentPath === '/')) {
                    link.classList.add('active');
                }
            });
        });
    </script>
</body>
</html>